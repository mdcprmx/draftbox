Task 1:
- use -std=11 while compiling
- use develop branch, folder src
- use POSIX-2017 standard
- clang format style google
- static library named "s21_string.a"
- with header file "s21_string.h"
- full unit testing with "check.h" library
- unit tests must compare it with standart functions from "string.h"

- Makefile targets:
all:
clean:
test:
s21_string.a:
gcov_report:

- gcov_report must generate html file
- use prefix "s21_", obviously
- some weird ass line about system error arrays (dig it later)
- follow the logic of standard string.h lib

Task 2:
- sprintf function
- everyithing outlined in Task 1 applies to this function too
- add support for:
specifiers: c, d, f, s, u, %
flags: -, +, (space)
width desctiption: (number)
precision desctiption: .(number)
length desctiption: h, l

Task 3...
well yeah, just focus on these two task first, oaight?


/// WARNING! ////
use 
srunner_set_fork_status function
if that's not custom one
ну кароч надо чтоб тест на память проходился и в тест кейсах,
а не только на файлик с запуском тестов

проверять malloc на null

в самих функциях память не освобождаем

в 5 задании нужно ставить \0 знаки конца строки, так как это си шарповские функции

ну и юзать calloc

при создании буффера чаров лучше всего ининлзировать его нулями
char buff[4096] = {'\0'};

может понадобиться библа math.h
для округления правой части вывода в float-ах
и функция modlf, которая полезна для разделения целой и дробной частей

Итак чо делает sprintf?
это кароч как printf. Но отправляет результат в указанную переменную а не на экран




